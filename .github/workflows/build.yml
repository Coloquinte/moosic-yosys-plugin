name: Build

on:
  workflow_dispatch:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

jobs:
  build:
    strategy:
      matrix:
        mode: ["Release", "Debug"]
        compiler: ["gcc"]

    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Install dependencies
      uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: tcl-dev libreadline-dev libffi-dev pkg-config python3 libboost-system-dev libboost-python-dev libboost-filesystem-dev zlib1g-dev xz-utils valgrind

    - name: Setup ccache
      uses: hendrikmuhs/ccache-action@v1.2

    - name: Install yosys
      run: |
        git clone https://github.com/YosysHQ/yosys; \
        cd yosys; make config-${{ matrix.compiler }}; \
        make -j2 ENABLE_CCACHE=1 ${{ matrix.mode == 'Release' && 'ENABLE_NDEBUG=1' || '' }}; \
        sudo make install; cd ..

    - name: Build
      run: make -j2 ENABLE_WERROR=1; sudo make install

    - name: Download benchmarks
      run: bash test/download_benchmarks.sh

    - name: Test commands
      run: ${{ matrix.compiler == 'gcc' && 'ENABLE_VALGRIND=1' || '' }} bash test/test_commands.sh

    - name: Test edge cases
      run: ${{ matrix.compiler == 'gcc' && 'ENABLE_VALGRIND=1' || '' }} bash test/test_edge_cases.sh

    - name: Benchmarks
      if: ${{ matrix.mode == 'Release' }}
      run: bash test/run_benchmarks.sh

    - name: Archive
      if: ${{ matrix.mode == 'Release' }}
      uses: actions/upload-artifact@v3
      with:
        name: benchmark-results
        path: |
          benchmarks/results
          benchmarks/logs
          benchmarks/scripts
